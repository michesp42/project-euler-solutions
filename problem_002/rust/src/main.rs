/// Each new term in the Fibonacci sequence is generated by adding the previous two
/// terms. By starting with 1 and 2, the first 10 terms will be:
///
/// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
///
/// By considering the terms in the Fibonacci sequence whose values do not exceed
/// four million, find the sum of the even-valued terms.

fn main() {
    println!("{}", solution_iterative());
}

/// Return sum of even Fibonacci numbers below 4M using iterative method.
fn solution_iterative() -> u64 {
    let mut curr = 0;
    let mut nxt = 1;
    let mut total = 0;

    while curr < 4_000_000 {
        if curr % 2 == 0 {
            total += curr;
        }

        let tmp = nxt;
        nxt = curr + nxt;
        curr = tmp;
    }

    total
}
