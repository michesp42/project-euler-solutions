#!/usr/bin/env python3

"""
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""


def solution_iterative() -> int:
    """Return sum of even Fibonacci numbers below 4M using iterative method."""
    curr: int = 0
    nxt: int = 1
    total: int = 0

    while curr < 4_000_000:
        if curr % 2 == 0:
            total += curr
        curr, nxt = nxt, curr + nxt

    return total


if __name__ == "__main__":
    print(solution_iterative())
