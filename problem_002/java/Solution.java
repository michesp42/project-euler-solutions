/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 *
 * <p>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 *
 * <p>Return sum of even Fibonacci numbers below 4M using iterative method.
 */
public class Solution {
  public static void main(String[] args) {
    System.out.println(solutionIterative());
  }

  /**
   * Return sum of even Fibonacci numbers below 4M using iterative method.
   *
   * @return total the sum of even Fibonacci numbers below 4M
   */
  private static int solutionIterative() {
    int curr = 0;
    int nxt = 1;
    int total = 0;

    while (curr < 4_000_000) {
      if (curr % 2 == 0) {
        total += curr;
      }

      var tmp = nxt;
      nxt += curr;
      curr = tmp;
    }

    return total;
  }
}
